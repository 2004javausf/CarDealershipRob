package com.revature.daoimpl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.revature.beans.Customer;
import com.revature.dao.CustomerDAO;
import com.revature.io.CustomerIO;
import com.revature.util.ConnFactory;

public class CustomerDAOImpl implements CustomerDAO {
	public static List<Customer> customerList = new ArrayList<Customer>();
	public static ConnFactory cf = ConnFactory.getInstance();
	
	public void createCustomer() {
		CustomerIO.readCustomerFile();
		AccountsIO.readAccountFile();
	}
	
	@Override
	public void insertCustomer(String firstName, String lastName, String userName, String password,
			int accountNumber, int offers) throws SQLException {
		Connection conn = cf.getConnection();
		Scanner textInput = new Scanner(System.in);
		String sql = "INSERT INTO CUSTOMER VALUES(CSEQ.NEXTVAL, ?, ?, ?, ?, ASEQ.NEXTVAL, 0)";
		PreparedStatement ps = conn.prepareStatement(sql);
		ps.setString(1, firstName);
		ps.setString(2, lastName);
		ps.setString(3, userName);
		ps.setString(4, password);
		ps.executeUpdate();		
	}

	@Override
	public List<Customer> getCustomerList() throws SQLException {
		List<Customer> customerList = new ArrayList<Customer>();
		Connection conn = cf.getConnection();
		Statement stmt = conn.createStatement();
		ResultSet rs = stmt.executeQuery("SELECT * FROM CUSTOMER");
		Customer c = null;
		while (rs.next()) {
			c = new Customer(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getInt(6));
			customerList.add(c);
		}
		return customerList;
	}
	
	public static void validateCustomer() {
		
	}
	
	public static Customer findCustomerByUserName(String inputUserName) {
		for (int i = 0; i < CustomerDAOImpl.customerList.size(); i++) {
			String name = CustomerDAOImpl.customerList.get(i).getUserName();
			if(inputUserName.equals(name)) {
				return CustomerDAOImpl.customerList.get(i);
			}
		}
		System.out.println("Customer not found");
		return null;
	}
	
	public static Customer findCustomerByPassword(String inputPassword) {
		for (int i = 0; i < CustomerDAOImpl.customerList.size(); i++) {
			String password = CustomerDAOImpl.customerList.get(i).getPassword();
			if (inputPassword.equals(password)) {
				return CustomerDAOImpl.customerList.get(i);
			}
		}
		System.out.println("Password doed not match");
		return null;
	}
	
	public static void createCustomer(String name, String lastName, String userName, String password) throws SQLException {
		Connection conn = cf.getConnection();
		String sql = "INSERT INTO CUSTOMER VALUES(CSEQ.NEXTVAL, ?, ?, ?, ?)";
		PreparedStatement ps = conn.prepareStatement(sql);
		ps.setString(1, name);
		ps.executeUpdate();
	}

}
